# Default values for strimzi-kafka.
# This is a YAML-formatted file.

nameOverride: "xd"
fullnameOverride: "xd"

kafka:
  version: 3.4.0
  replicas: 1
  storageClass: standard
  storageSize: 20Gi
  deleteClaim: false

  config:
    ############################# Log Basics #############################
    num.partitions: 50
    default.replication.factor: 1
    #min.insync.replicas should at least be 1 less than replication.factor
    min.insync.replicas: 1
    auto.createConnectors.topics.enable: false
    delete.topic.enable: false
    auto.leader.rebalance.enable: true
    controlled.shutdown.enable: true
    ############################# Internal Topic Settings  #############################
    offsets.topic.replication.factor: 1
    transaction.state.log.replication.factor: 1
    transaction.state.log.min.isr: 1
    inter.broker.protocol.version: "3.4"

    ############################# Log Retention Policy #############################
    log.cleanup.policy: delete
    log.retention.ms: "604800000" # 7 days
    log.segment.bytes: "1073741824"
    log.roll.ms: "86400000" # 1 day
    ############################# Group Coordinator Settings #############################
    group.initial.rebalance.delay.ms: 10000
    ############################# SSL Settings ######################################
    ssl.enabled.protocols: "TLSv1.2"
    ssl.protocol: "TLSv1.2"

  metricsConfig:
    type: jmxPrometheusExporter
    valueFrom:
      configMapKeyRef:
        name: kafka-metrics
        key: kafka-metrics-config.yml

zookeeper:
  replicas: 1
  storageClass: standard
  storageSize: 20Gi
  deleteClaim: false
  metricsConfig:
    type: jmxPrometheusExporter
    valueFrom:
      configMapKeyRef:
        name: kafka-metrics
        key: zookeeper-metrics-config.yml

cruiseControl:
  enable: false
  brokerCapacity:
    disk: 10Gi
    cpuUtilization: 95
    inboundNetwork: 10000KiB/s
    outboundNetwork: 10000KiB/s
  metricsConfig:
    type: jmxPrometheusExporter
    valueFrom:
      configMapKeyRef:
        name: cruise-control-metrics
        key: metrics-config.yml

kafkaConnect:
  image: quay.io/strimzi/kafka:latest-kafka-3.4.0-amd64
  replicas: 1
  resources:
    limit:
      cpu: "1"
      memory: 2Gi
  jvmOptions:
    # Use -Xmx to specify the maximum heap size
    # Use -Xms to specify the initial Java heap size
    Xmx: "1g"
    Xms: "1g"
  bootstrapServers: xd-kafka-bootstrap:9092
  config:
    group.id: xd
    auto.register.schemas: true
    offset.storage.topic: connect-cluster-offsets
    config.storage.topic: connect-cluster-configs
    status.storage.topic: connect-cluster-status
    config.storage.replication.factor: 3
    offset.storage.replication.factor: 3
    status.storage.replication.factor: 3
    key.converter.schemas.enable: true
    value.converter.schemas.enable: true
    #    key.converter: io.apicurio.registry.utils.converter.AvroConverter
    #    key.converter.apicurio.registry.url: http://kmon-apicurio-registry:8080/apis/registry/v2
    #    key.converter.schema.registry.url: http://kmon-apicurio-registry:8080/apis/ccompat/v6
    #    key.converter.apicurio.registry.auto-register: true
    #    key.converter.apicurio.registry.find-latest: true
    #    value.converter: io.apicurio.registry.utils.converter.AvroConverter
    #    value.converter.apicurio.registry.url: http://kmon-apicurio-registry:8080/apis/registry/v2
    #    value.converter.apicurio.registry.auto-register: true
    #    value.converter.apicurio.registry.find-latest: true
    schema.name.adjustment.mode: avro
    config.providers: secrets,configmaps
    config.providers.secrets.class: io.strimzi.kafka.KubernetesSecretConfigProvider
    config.providers.configmaps.class: io.strimzi.kafka.KubernetesConfigMapConfigProvider

kafkaTopic:
  topics:
    - name: "kmon_v1_events"
      partitions: 30

kafkaConnector:
  topics: # Connector topic-specific configuration
    - name: "kmon_v1_events"
      config:
        transforms.TimestampConverter.field: time

  config: # Common connector configuration
    schema.registry.url: http://xd-apicurio-registry:8080/apishelm
    key.converter.schema.registry.url: http://xd-apicurio-registry:8080/apis
    value.converter.schema.registry.url: http://xd-apicurio-registry:8080/apis
    key.converter: io.confluent.connect.avro.AvroConverter
    value.converter: io.confluent.connect.avro.AvroConverter

  dbSinksConfig: # Database sink connector configuration
    createConnectors: true
    pauseConnectors: false
    connection.url: ${secrets:db-connection-url-telemetry:pgbouncerUrl}
    connection.password: ${secrets:db-connection-url-telemetry:password}
    connector.class: io.confluent.connect.jdbc.JdbcSinkConnector

    auto.createConnectors: true
    auto.evolve: true
    insert.mode: insert
    pk.mode: none
    tasks.max: 5

    transforms: "TimestampConverter, fieldNamesToSnakeCase"
    transforms.TimestampConverter.type: org.apache.kafka.connect.transforms.TimestampConverter$Value
#    transforms.TimestampConverter.field: "time" # already present
    transforms.TimestampConverter.target.type: Timestamp
    transforms.fieldNamesToSnakeCase.type: com.github.jcustenborder.kafka.connect.transform.common.ChangeCase$Value
    transforms.fieldNamesToSnakeCase.from: LOWER_CAMEL
    transforms.fieldNamesToSnakeCase.to: LOWER_UNDERSCORE

    errors.tolerance: all
    errors.log.enable: true
    errors.log.include.messages: true
    errors.retry.timeout: 300000
    errors.retry.delay.max.ms: 30000
    errors.deadletterqueue.context.headers.enable: true
    errors.deadletterqueue.topic.replication.factor: 3
